/*
	This file was generated by BeXL
	Copyright (c) 2000 Simon Huet
*/


#include <Application.h>
#include "message_labels.h"
#include "LJViewFriendsOf.h"
#include "FriendListItem.h"
#include "ResponseBlockManager.h"
#include "CommandBlockManager.h"
#include "LJApplication.h"

#include <Window.h>
#include <Alert.h>
#include <Font.h>

#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <string>


LJViewFriendsOf::LJViewFriendsOf()
 : BView(BRect(5, 5, 348, 217), "Friends Of", B_FOLLOW_TOP | B_FOLLOW_LEFT, B_WILL_DRAW | B_NAVIGABLE)
{

	_bxl_attached = false;

		friends_list = new BListView(BRect(7, 27, 172, 204), "listview", B_SINGLE_SELECTION_LIST, B_FOLLOW_TOP_BOTTOM | B_FOLLOW_LEFT_RIGHT, B_WILL_DRAW|B_FULL_UPDATE_ON_RESIZE);
	scrollview2 = new BScrollView("View", friends_list, B_FOLLOW_TOP | B_FOLLOW_LEFT, B_WILL_DRAW | B_NAVIGABLE, false, true, B_FANCY_BORDER);
	stringview4 = new BStringView(BRect(8, 3, 331, 15), "StringView", "This is the list of user that have added you to their Friends List", B_FOLLOW_TOP | B_FOLLOW_LEFT, B_WILL_DRAW | B_NAVIGABLE);
	button5 = new BButton(BRect(226, 48, 317, 74), "Button", "Add Friend", new BMessage(FRIENDSOF_ADDUSER_MSG), B_FOLLOW_TOP | B_FOLLOW_LEFT, B_WILL_DRAW | B_NAVIGABLE);
	SetViewColor((rgb_color) {216,216,216,255});
	BFont font(be_bold_font);
	font.SetSize(12);
	friends_list->SetFont(&font);
	friends_list->SetDrawingMode(B_OP_OVER);
	listfilled = false;

}

LJViewFriendsOf::~LJViewFriendsOf(void)
{
	}

void
LJViewFriendsOf::AttachedToWindow(void)
{

	if (!_bxl_attached){
	AddChild(scrollview2);
	AddChild(stringview4);
	AddChild(button5);
		_bxl_attached = true;
	}
	SetViewColor((rgb_color) {216,216,216,255});
//BView::AttachedToWindow();


}

void
LJViewFriendsOf::AllAttached(void)
{

}

int32 FillFriendofList_Thread(void *data)
{
	LJViewFriendsOf *view = (LJViewFriendsOf *)data;
	
    CommandBlockManager *man = new CommandBlockManager();
    man->SetValue("mode", "friendof");
	char *response = ((LJApplication *)be_app)->SendCommand(man);

    delete man;
    man = NULL;

	view->Window()->Lock();
	if (!view->friends_list->IsEmpty()) view->friends_list->MakeEmpty();
	if (view->Window()->IsLocked()) view->Window()->Unlock();
	if (response){
		char key[30];
		
		ResponseBlockManager *block = new ResponseBlockManager(response);
		
		if (block->GetValue("friendof_count")){
			int friend_count = atoi(block->GetValue("friendof_count"));
			
			for (int i=1; i<=friend_count; i++) {
				sprintf(key, "friendof_%d_user", i);
				view->Window()->Lock();
				view->friends_list->AddItem(new FriendListItem(block->GetValue(key), false));
				if (view->Window()->IsLocked()) view->Window()->Unlock();
			}
		}
	}
	return B_OK;

}

void
LJViewFriendsOf::FillList(void)
{
	fill_thread = spawn_thread(FillFriendofList_Thread, "LJViewFriendsOf::FillList", B_NORMAL_PRIORITY, this);
	resume_thread(fill_thread);
	
}
